{"version":3,"sources":["components/Alert.js","components/Lists.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","className","style","display","isAlert","onClick","closeAlert","Lists","state","this","todoList","map","item","i","id","deleteTask","deleteAllTask","Component","TodoList","changeInputValue","e","setState","target","value","submitInputValue","preventDefault","text","newList","concat","index","slice","splice","listItems","cleanList","filter","showInput","inputAni","hiddenInput","color","type","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec3be00e.chunk.js","sourcesContent":["import React, { useState  } from 'react'\r\nimport './Alert.css';\r\nconst Alert = (props) =>  {\r\n\r\n      \r\n        return (\r\n            <div className=\"card-area\" style={{display:`${props.isAlert ?\"block\" :\"none\"}`}}>\r\n                <div className=\"card \">\r\n                    <h3 className=\"my-auto \"> please write something </h3>\r\n                    <button className=\"closeAlertBtn  mx-auto\" onClick={props.closeAlert}>OK</button>\r\n                </div>\r\n            </div>\r\n        )\r\n   \r\n}\r\n\r\nexport default Alert\r\n\r\n","import React, { Component } from 'react'\r\nimport './List.css'\r\nexport class Lists extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {            \r\n        }\r\n    }\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <ul  >\r\n                 {this.props.todoList.map((item, i) => {                \r\n                     return(\r\n                             <li id={i}   key={i}  >\r\n                                  {item}  \r\n                                   <i className=\"fa fa-check\" ></i>\r\n                                   <i onClick={() => this.props.deleteTask(i)} className=\"fa fa-times\" ></i>\r\n                             </li>     \r\n                            )\r\n                 })}\r\n                 </ul>\r\n                            <button className=\"deleteButton\" onClick={this.props.deleteAllTask}> DELETE </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Lists;\r\n\r\n\r\n ","import React, { Component } from 'react'\r\nimport './TodoList.css'\r\nimport Alert from './Alert';\r\nimport Lists from './Lists';\r\n// import Alert from './Alert';\r\n class TodoList extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n                       todoList : [\"Run\" , \"Jump\", \"Play\"],\r\n                       item     : \"\", \r\n                       isAlert  : false \r\n                     }\r\n    }\r\n\r\n    changeInputValue  =  e => {\r\n                     this.setState({ item : e.target.value })//input tan gelen değeri itema attık\r\n    }\r\n\r\n    submitInputValue = e => {\r\n                    e.preventDefault();\r\n                    let text = this.state.item;//item dan gelen değeride text değişkenine attık\r\n\r\n        if(text !== ''){\r\n\r\n                    let newList = this.state.todoList.concat(text);//todoList dizine text imi birleştiriyorum\r\n                    // ve newList içerisine atıyorum (böylese yeni listemiz oluşuyor)\r\n                    this.setState({\r\n                    todoList: newList, //todoList dizisini içerisine yeni neList dizimizi aktarıyoruz\r\n                    item : \"\"\r\n                    })\r\n        }\r\n        else{\r\n                 this.setState( {isAlert : !this.state.isAlert} )\r\n            }      \r\n    } \r\n\r\n    closeAlert = () => {\r\n           this.setState({ isAlert : !this.state.isAlert  })\r\n    }\r\n       \r\n    deleteTask = index => {\r\n            const newList = this.state.todoList.slice();\r\n            newList.splice(index, 1);\r\n            this.setState({todoList : newList})\r\n    }\r\n\r\n    deleteAllTask = listItems => {\r\n            const cleanList = this.state.todoList.filter(item => item.id !== listItems.id);\r\n            this.setState({ todoList :  cleanList })\r\n    }\r\n\r\n    showInput = () => {\r\n            this.setState({ inputAni : true })\r\n    }\r\n    hiddenInput = () => {\r\n            this.setState({ inputAni : false })\r\n    }\r\n\r\n    render() {\r\n        const  {todoList, item} = this.state;\r\n        return ( <>\r\n                    <form className=\"form-container\"  >\r\n                        <input style={{color:\"rgb(38, 64, 121)\"}}  type=\"text\" onChange={this.changeInputValue}  value={item}  />\r\n                        <button className=\"addButton\"  type=\"submit\" onClick={this.submitInputValue}>ADD</button>\r\n                    </form>\r\n                             <Lists\r\n                               todoList={this.state.todoList}\r\n                               deleteTask={this.deleteTask}\r\n                               deleteAllTask={this.deleteAllTask}\r\n                             />\r\n\r\n                             <Alert\r\n                             isAlert = {this.state.isAlert}\r\n                             closeAlert ={this.closeAlert}\r\n                             />\r\n             </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n          <div className=\"todolistArea  \">\n              <div className=\"container    my-5  text-center \">\n                  <div className=\"todo-list-app  mx-auto \" >\n                  <h1 className=\"py-3\">berkay's to-do list</h1>\n                  <TodoList/>\n                  </div>\n              </div>\n          </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}